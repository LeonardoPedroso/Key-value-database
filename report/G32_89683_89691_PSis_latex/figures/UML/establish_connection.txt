frame establish_connection

participantgroup #lightgray **Application** 
participant ApplicationThread
participant callbackServerThread
end



participantgroup #lightgray **KVS-LocalServer** 
participant ServerThread
participant KVSLocalServerClientThread
end
participant KVS-AuthServer

activate ApplicationThread

parallel
note over ServerThread:""accept()""
note over KVS-AuthServer :""recvfrom()""
parallel off

ApplicationThread->ServerThread:  ""connect()""

activate ServerThread

parallel
ServerThread-->*KVSLocalServerClientThread:<<new thread>>
note over ApplicationThread:Setup callback socket
parallel off

deactivate ServerThread

parallel
note over KVSLocalServerClientThread:""rcvQueryKVSLocalServer()""
note over ServerThread:""accept()""

parallel off


ApplicationThread->KVSLocalServerClientThread: ""queryEstablishConnection(PID,groupId,secret)
deactivate ApplicationThread
activate KVSLocalServerClientThread

note over KVSLocalServerClientThread: Check if ""groupId"" exists

KVSLocalServerClientThread->KVS-AuthServer: ""getSecret(groupId)""
activate KVS-AuthServer

parallel
note over KVS-AuthServer:Check if ""groupId"" exists,\n and if so retrieve ""secret""

note over KVSLocalServerClientThread: Wait for reply and, if it does not \n recieve one in 0.5s, query again,\n up to 5 times

parallel off

KVS-AuthServer-->KVSLocalServerClientThread: ""send(secret)""

KVSLocalServerClientThread->ApplicationThread: ""connectCallback()""
KVSLocalServerClientThread-->ApplicationThread: ""ansQueryEstablishConnection(status)""

deactivate KVSLocalServerClientThread
activate ApplicationThread

note over ApplicationThread: ""acceptCallback()""
ApplicationThread-->*callbackServerThread:<<new thread>>
deactivate ApplicationThread

note over callbackServerThread: ""read()""



deactivate KVS-AuthServer